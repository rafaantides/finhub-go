// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Size: 255},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "color", Type: field.TypeString, Size: 7},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
	}
	// DebtsColumns holds the columns for the "debts" table.
	DebtsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "amount", Type: field.TypeFloat64, SchemaType: map[string]string{"postgres": "decimal(10,2)"}},
		{Name: "title", Type: field.TypeString, Size: 255},
		{Name: "purchase_date", Type: field.TypeTime},
		{Name: "due_date", Type: field.TypeTime, Nullable: true},
		{Name: "invoice_id", Type: field.TypeUUID, Nullable: true},
		{Name: "category_id", Type: field.TypeUUID, Nullable: true},
		{Name: "status_id", Type: field.TypeUUID, Nullable: true},
	}
	// DebtsTable holds the schema information for the "debts" table.
	DebtsTable = &schema.Table{
		Name:       "debts",
		Columns:    DebtsColumns,
		PrimaryKey: []*schema.Column{DebtsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "debts_invoices_invoice",
				Columns:    []*schema.Column{DebtsColumns[7]},
				RefColumns: []*schema.Column{InvoicesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "debts_categories_category",
				Columns:    []*schema.Column{DebtsColumns[8]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "debts_payment_status_status",
				Columns:    []*schema.Column{DebtsColumns[9]},
				RefColumns: []*schema.Column{PaymentStatusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// InvoicesColumns holds the columns for the "invoices" table.
	InvoicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "amount", Type: field.TypeFloat64, SchemaType: map[string]string{"postgres": "decimal(10,2)"}},
		{Name: "title", Type: field.TypeString, Size: 255},
		{Name: "issue_date", Type: field.TypeTime, Nullable: true},
		{Name: "due_date", Type: field.TypeTime},
		{Name: "status_id", Type: field.TypeUUID, Nullable: true},
	}
	// InvoicesTable holds the schema information for the "invoices" table.
	InvoicesTable = &schema.Table{
		Name:       "invoices",
		Columns:    InvoicesColumns,
		PrimaryKey: []*schema.Column{InvoicesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "invoices_payment_status_status",
				Columns:    []*schema.Column{InvoicesColumns[7]},
				RefColumns: []*schema.Column{PaymentStatusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PaymentStatusColumns holds the columns for the "payment_status" table.
	PaymentStatusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// PaymentStatusTable holds the schema information for the "payment_status" table.
	PaymentStatusTable = &schema.Table{
		Name:       "payment_status",
		Columns:    PaymentStatusColumns,
		PrimaryKey: []*schema.Column{PaymentStatusColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CategoriesTable,
		DebtsTable,
		InvoicesTable,
		PaymentStatusTable,
	}
)

func init() {
	DebtsTable.ForeignKeys[0].RefTable = InvoicesTable
	DebtsTable.ForeignKeys[1].RefTable = CategoriesTable
	DebtsTable.ForeignKeys[2].RefTable = PaymentStatusTable
	InvoicesTable.ForeignKeys[0].RefTable = PaymentStatusTable
}
